# devopsworld - pipeline ; used as frontmatter to replace ---

name: $(date:yyyyMMdd)$(rev:.rr) #20190910.00, date and rev are builtins

stages:
  - stage: 'build' # evaluated == no quotes
    condition: succeeded() # succeeded() == thing before this must have succeeded. failed(), failedOnly()
    displayName: 'build-mvc' # literal
    jobs:
      - job:
        condition: succeeded()
        # condition: and(succeeded(), eq(['BranchName'], 'fred'))
        displayName: 'build-process'
        pool: # the toolbox to use in this job
          vmImage: 'ubuntu-16.04'
        steps:
          - task: UseDotNet@2
            displayName: 'dotnet installer'
            inputs:
              version: '2.2.401'
          - script: |
              dotnet build

  - stage: 'test' 
    condition: succeeded() 
    displayName: 'test-mvc' 
    jobs:
      - job:
        condition: succeeded()
        displayName: 'test-process'
        pool: 
          vmImage: 'ubuntu-16.04'
        steps:
          - task: UseDotNet@2
            displayName: 'dotnet installer'
            inputs:
              version: '2.2.401' 
          - script: |
              dotnet tool install --global dotnet-sonarscanner
              dotnet sonarscanner begin /k:"DevopsWarudo" /o:"razarac00" /d:sonar.login="d0c82dba5fe6f4826a61c1cf19dc7cc1572d058b" /d:sonar.host.url="https://sonarcloud.io"
              dotnet build 
              dotnet test --logger trx /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=\"cobertura,opencover\" /p:Exclude=[xunit*]*
              dotnet sonarscanner end /d:sonar.login="d0c82dba5fe6f4826a61c1cf19dc7cc1572d058b" 
          - task: PublishTestResults@2
            displayName: 'publish result::unit-test'
            inputs:
              testRunner: VSTest
              testResultsFiles: '**/*.trx'
          - task: PublishCodeCoverageResults@1
            displayName: 'publish result::code-coverage'
            inputs:
              codeCoverageTool: cobertura
              summaryFileLocation: '**/coverage.cobertura.xml'

  - stage: 'pack' # evaluated == no quotes
    condition: succeeded() # succeeded() == thing before this must have succeeded. failed(), failedOnly()
    dependsOn:
      - test
    displayName: 'pack-mvc' # literal
    jobs:
      - job:
        condition: succeeded()
        # condition: and(succeeded(), eq(['BranchName'], 'fred'))
        displayName: 'pack-process'
        pool: # the toolbox to use in this job
          vmImage: 'ubuntu-16.04'
        steps:
          - script: |
              docker image build --file Dockerfile --tag devopsworld .
              docker image tag devopsworld orjijohn/devopsworld
              docker push orjijohn/devopsworld
          - task: Docker@2
            inputs:
              command: 'logout'
              containerRegistry: 'docker'
            displayName: 'docker login'

  - stage: 'deploy' # evaluated == no quotes
    condition: succeeded('pack') # succeeded() == thing before this must have succeeded. failed(), failedOnly()
    dependsOn:
      - test
    displayName: 'deploy-mvc' 
    jobs:
      - job:
        condition: succeeded()
        displayName: 'deploy-process'
        pool: 
          vmImage: 'ubuntu-16.04'
        steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'Free Trial(c627afcc-a09f-48f7-b81a-fe0ebc8244c4)'
              appName: 'devopswarudo'
              containers: 'orjijohn/devopsworld'


trigger: # does the listening, the source ctrl does the triggering, branches, pr, tags
  branches:
    include:
      - master

variables:
  testVar: 'tuesday'
  sonar: 'd0c82dba5fe6f4826a61c1cf19dc7cc1572d058b'